

// Edits made on the parser.h

const operationMap::value_type associations[] =
{
	operationMap::value_type("+", std::make_pair (1, LEFT)),
	operationMap::value_type("-", std::make_pair (1, LEFT)),
	operationMap::value_type("*", std::make_pair (2, LEFT)),
	operationMap::value_type("/", std::make_pair (2, LEFT)),
	operationMap::value_type("%", std::make_pair (2, LEFT)),
	operationMap::value_type("^", std::make_pair (3, RIGHT)),
};


// Edits made on the parser.cpp

bool Calculator::isOperator(const std::string& token)
{
	return (token == "+" || token == "-" || token == "*" || token == "/" || token == "^" || token == "%");
}


double Calculator::applyOp(const double a, const double b, const std::string op)
{
	if (op == "+")
		return (a + b);
	else if (op == "-")
		return(a - b);
	else if (op == "*")
		return (a * b);
	else if (op == "/")
		return (a / b);
	else if (op == "^")
		return (pow(a, b));
    else if (op == "%")
        return (fmod(a, b));
}
